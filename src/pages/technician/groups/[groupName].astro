---
import groupJson from "@data/tech-groups.json";
import questionJson from "@data/tech-questions.json";

export function getStaticPaths() {
	/*
    [
      {params: {groupName: group} }
    ]
  */
	const paths = groupJson.map((groupData) => ({
		params: { groupName: groupData.groupId },
	}));
	return paths;
}

const { groupName } = Astro.params;
const desc =
	groupJson.find((data) => data.groupId === groupName)?.description ||
	"No description";

const questions = questionJson.filter(
	(question) => question.group === groupName
);
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Astro</title>
	</head>
	<body>
		<h1>Group {groupName}</h1>
		<p class="text-gray-600">
			{desc}
		</p>

		<h2>{questions.length} Questions in Group {groupName}:</h2>
		<ul>
			{questions.map((q) => <li>{q.text}</li>)}
		</ul>
	</body>
</html>
